From 088134d176835041a2ec6c42c343f4c46558df05 Mon Sep 17 00:00:00 2001
From: Sumanth Bhat <sumanth.bhat@intel.com>
Date: Sat, 23 Apr 2022 06:25:52 +0000
Subject: [PATCH] Add I3C Binding related interfaces

This adds MCTP over I3C specific D-Bus interfaces. This will
have to reside here since upstream's current direction is to
implement bindings in kernel and don't have physical binding
specific interfaces.

Signed-off-by: Sumanth Bhat <sumanth.bhat@intel.com>
---
 .../MCTP/Binding/I3C/meson.build              | 13 +++++++++
 .../openbmc_project/MCTP/Binding/meson.build  | 14 ++++++++++
 .../openbmc_project/MCTP/Base.interface.yaml  |  1 +
 .../MCTP/Binding/I3C.interface.yaml           | 27 +++++++++++++++++++
 4 files changed, 55 insertions(+)
 create mode 100644 gen/xyz/openbmc_project/MCTP/Binding/I3C/meson.build
 create mode 100644 yaml/xyz/openbmc_project/MCTP/Binding/I3C.interface.yaml

diff --git a/gen/xyz/openbmc_project/MCTP/Binding/I3C/meson.build b/gen/xyz/openbmc_project/MCTP/Binding/I3C/meson.build
new file mode 100644
index 0000000..c9d690f
--- /dev/null
+++ b/gen/xyz/openbmc_project/MCTP/Binding/I3C/meson.build
@@ -0,0 +1,13 @@
+# Add to generated sources.
+generated_sources += custom_target(
+    'xyz/openbmc_project/MCTP/Binding/I3C__cpp'.underscorify(),
+    input: [ '../../../../../../yaml/xyz/openbmc_project/MCTP/Binding/I3C.interface.yaml',  ],
+    output: [ 'server.cpp', 'server.hpp', 'client.hpp',  ],
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'cpp',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../../../yaml',
+        'xyz/openbmc_project/MCTP/Binding/I3C',
+    ],
+)
diff --git a/gen/xyz/openbmc_project/MCTP/Binding/meson.build b/gen/xyz/openbmc_project/MCTP/Binding/meson.build
index 1a05e9d..2ac9bec 100644
--- a/gen/xyz/openbmc_project/MCTP/Binding/meson.build
+++ b/gen/xyz/openbmc_project/MCTP/Binding/meson.build
@@ -26,3 +26,17 @@ generated_others += custom_target(
         'xyz/openbmc_project/MCTP/Binding/SMBus',
     ],
 )
+
+subdir('I3C')
+generated_others += custom_target(
+    'xyz/openbmc_project/MCTP/Binding/I3C__markdown'.underscorify(),
+    input: [ '../../../../../yaml/xyz/openbmc_project/MCTP/Binding/I3C.interface.yaml',  ],
+    output: [ 'I3C.md' ],
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'markdown',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../../yaml',
+        'xyz/openbmc_project/MCTP/Binding/I3C',
+    ],
+)
diff --git a/yaml/xyz/openbmc_project/MCTP/Base.interface.yaml b/yaml/xyz/openbmc_project/MCTP/Base.interface.yaml
index 9438551..b4047b4 100644
--- a/yaml/xyz/openbmc_project/MCTP/Base.interface.yaml
+++ b/yaml/xyz/openbmc_project/MCTP/Base.interface.yaml
@@ -132,6 +132,7 @@ enumerations:
         description: Reserved for MCTP over USB
       - name: MctpOverKcs
       - name: MctpOverSerial
+      - name: MctpOverI3c
       - name: VendorDefined
 
   - name: MctpPhysicalMediumIdentifiers
diff --git a/yaml/xyz/openbmc_project/MCTP/Binding/I3C.interface.yaml b/yaml/xyz/openbmc_project/MCTP/Binding/I3C.interface.yaml
new file mode 100644
index 0000000..ffcb657
--- /dev/null
+++ b/yaml/xyz/openbmc_project/MCTP/Binding/I3C.interface.yaml
@@ -0,0 +1,27 @@
+description: >
+    Interface exposed by MCTP daemon for I3C binding
+
+properties:
+    - name: DiscoveredFlag
+      type: enum[self.DiscoveryFlags]
+      description: >
+        Each endpoint (except the bus owner) on the I3C bus maintains an
+        internal flag called the Discovered flag. The flag is set to the
+        discovered state when the Set Endpoint ID command is received.
+
+    - name: Address
+      type: byte
+      description: >
+        Represents own I3C address. In case of I3C primary, the address is
+        defined as 0x00.
+
+enumerations:
+    - name: DiscoveryFlags
+      description: >
+          The Prepare for Endpoint Discovery message causes each recipient
+          endpoint on the I3C bus to set their respective Discovered flag to
+          the undiscovered state.
+      values:
+        - name: Discovered
+        - name: Undiscovered
+        - name: NotApplicable
-- 
2.17.1

