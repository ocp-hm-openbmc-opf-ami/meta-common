From 8d135a154da3bf1881ab1b40863d1e25af9b1e86 Mon Sep 17 00:00:00 2001
From: Richard Marian Thomaiyar <richard.marian.thomaiyar@linux.intel.com>
Date: Mon, 24 Feb 2020 13:37:12 +0530
Subject: [PATCH 2/2] Use groupmems instead of getgrnam_r due to overlay

With JFFS2 overlay, getgrnam_r during initial time returns the
old group details as per the lower dir, instead of the overlay one
but at the same time groupmems where returning proper values, which
reads the file everytime. Hence replacing getgrnam_r with groupmems

Tested:
1. Verified that when added multiple user and then doing
BMC reset using ipmitool raw 6 2 doesn't reproduce the issue of
user with only ssh group. (on 38 version source + this fix)
2. Updated using redfish to version 39 + this fix, and made sure
issue doesn't happen.

Note: For testing purpose added debug statements to dump ouput of
both getgrnam_r & groupmems and able to see proper list only
in groupmems when the issue is reproduced

Signed-off-by: Richard Marian Thomaiyar <richard.marian.thomaiyar@linux.intel.com>
Signed-off-by: jayaprakash Mutyala <mutyalax.jayaprakash@intel.com>
---
 user_service.cpp | 28 +++++++++++++---------------
 1 file changed, 13 insertions(+), 15 deletions(-)

diff --git a/user_service.cpp b/user_service.cpp
index 405b6e9..2a590c8 100644
--- a/user_service.cpp
+++ b/user_service.cpp
@@ -147,28 +147,26 @@ class ShadowService : public phosphor::user::UserServiceInterface
         getUsersInGroup(const std::string& groupName) const override
     {
         std::vector<std::string> usersInGroup;
-        // Should be more than enough to get the pwd structure.
-        std::array<char, 4096> buffer{};
-        struct group grp;
-        struct group* grpPtr = &grp;
-        struct group* resultPtr;
-
-        int status = getgrnam_r(groupName.c_str(), grpPtr, buffer.data(),
-                                buffer.max_size(), &resultPtr);
-
-        if (!status && (grpPtr == resultPtr))
+        std::vector<std::string> output;
+        try
         {
-            for (; *(grp.gr_mem) != NULL; ++(grp.gr_mem))
-            {
-                usersInGroup.emplace_back(*(grp.gr_mem));
-            }
+            output = phosphor::user::executeCmd("/usr/sbin/groupmems", "-l",
+                                                "-g", groupName.c_str());
         }
-        else
+        catch (const phosphor::user::InternalFailure& e)
         {
             phosphor::logging::log<phosphor::logging::level::ERR>(
                 "Group not found",
                 phosphor::logging::entry("GROUP=%s", groupName.c_str()));
             // Don't throw error, just return empty usersInGroup - fallback
+            return usersInGroup;
+        }
+        if (!output.empty())
+        {
+            boost::algorithm::trim_right(output[0]);
+            boost::algorithm::split(usersInGroup, output[0],
+                                    boost::algorithm::is_any_of("\t "),
+                                    boost::token_compress_on);
         }
         return usersInGroup;
     }
-- 
2.17.1

