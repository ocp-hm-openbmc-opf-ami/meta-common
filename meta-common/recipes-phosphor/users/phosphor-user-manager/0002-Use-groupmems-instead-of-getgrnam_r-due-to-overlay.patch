From b96dabe5becd49572799ce2c06094544d344bb28 Mon Sep 17 00:00:00 2001
From: Richard Marian Thomaiyar <richard.marian.thomaiyar@linux.intel.com>
Date: Mon, 24 Feb 2020 13:37:12 +0530
Subject: [PATCH] Use groupmems instead of getgrnam_r due to overlay

With JFFS2 overlay, getgrnam_r during initial time returns the
old group details as per the lower dir, instead of the overlay one
but at the same time groupmems where returning proper values, which
reads the file everytime. Hence replacing getgrnam_r with groupmems

Tested:
1. Verified that when added multiple user and then doing
BMC reset using ipmitool raw 6 2 doesn't reproduce the issue of
user with only ssh group. (on 38 version source + this fix)
2. Updated using redfish to version 39 + this fix, and made sure
issue doesn't happen.

Note: For testing purpose added debug statements to dump ouput of
both getgrnam_r & groupmems and able to see proper list only
in groupmems when the issue is reproduced

Signed-off-by: Richard Marian Thomaiyar <richard.marian.thomaiyar@linux.intel.com>
Signed-off-by: jayaprakash Mutyala <mutyalax.jayaprakash@intel.com>
Upstream-Status: Pending
---
 user_mgr.cpp | 27 +++++++++++++--------------
 1 file changed, 13 insertions(+), 14 deletions(-)

diff --git a/user_mgr.cpp b/user_mgr.cpp
index a2b6a76..aebf6ae 100644
--- a/user_mgr.cpp
+++ b/user_mgr.cpp
@@ -1023,25 +1023,24 @@ bool UserMgr::isUserEnabled(const std::string& userName)
 std::vector<std::string> UserMgr::getUsersInGroup(const std::string& groupName)
 {
     std::vector<std::string> usersInGroup;
-    // Should be more than enough to get the pwd structure.
-    std::array<char, 4096> buffer{};
-    struct group grp;
-    struct group* resultPtr = nullptr;
-
-    int status = getgrnam_r(groupName.c_str(), &grp, buffer.data(),
-                            buffer.max_size(), &resultPtr);
-
-    if (!status && (&grp == resultPtr))
+    std::vector<std::string> output;
+    try
     {
-        for (; *(grp.gr_mem) != NULL; ++(grp.gr_mem))
-        {
-            usersInGroup.emplace_back(*(grp.gr_mem));
-        }
+        output = phosphor::user::executeCmd("/usr/sbin/groupmems", "-l", "-g",
+                                            groupName.c_str());
     }
-    else
+    catch (const phosphor::user::InternalFailure& e)
     {
         lg2::error("Group '{GROUPNAME}' not found", "GROUPNAME", groupName);
         // Don't throw error, just return empty userList - fallback
+        return usersInGroup;
+    }
+    if (!output.empty())
+    {
+        boost::algorithm::trim_right(output[0]);
+        boost::algorithm::split(usersInGroup, output[0],
+                                boost::algorithm::is_any_of("\t "),
+                                boost::token_compress_on);
     }
     return usersInGroup;
 }
-- 
2.25.1

