From 5973e359cbae569148ec639b58aa705bbafb7411 Mon Sep 17 00:00:00 2001
From: Hardik Panchal <hardikx.panchal@intel.com>
Date: Tue, 15 Nov 2022 09:06:50 +0000
Subject: [PATCH] Add support for different headers

Currently PFR update only had support for PFR image headers, so expand
to allow support for different header types.

Tested: PFR update works

Signed-off-by: James Feist <james.feist@linux.intel.com>
Signed-off-by: Hardik Panchal <hardikx.panchal@intel.com>
Upstream-Status: Pending
---
 pfr_image_manager.cpp | 16 ++++++++++------
 1 file changed, 10 insertions(+), 6 deletions(-)

diff --git a/pfr_image_manager.cpp b/pfr_image_manager.cpp
index 969a056..511a65b 100644
--- a/pfr_image_manager.cpp
+++ b/pfr_image_manager.cpp
@@ -48,7 +48,9 @@ int Manager::verifyImage(const std::filesystem::path imgPath,
     uint8_t imgType {};
     uint32_t imgMagic {};
     std::array<uint8_t, 2> verData {};
-    struct pfrImgBlock0 block0Data {};
+    constexpr size_t readBufferSize =
+        std::max<size_t>({sizeof(pfrImgBlock0), sizeof(pldm::PldmPkgHeader)});
+    std::array<char, readBufferSize> readBuffer = {};
 
     std::string verPurpose {"xyz.openbmc_project.Software.Version.VersionPurpose."};
 
@@ -65,10 +67,12 @@ int Manager::verifyImage(const std::filesystem::path imgPath,
                 return -1;
             }
 
-            imgFile.read(reinterpret_cast<char*>(&block0Data),
-                         sizeof(block0Data));
+            imgFile.read(readBuffer.data(), readBufferSize);
 
-            imgMagic = block0Data.tag;
+            auto* block0Data =
+                reinterpret_cast<pfrImgBlock0*>(readBuffer.data());
+
+            imgMagic = block0Data->tag;
 
             if (htobe32(imgMagic) == pldmMagic)
             {
@@ -167,7 +171,7 @@ int Manager::verifyImage(const std::filesystem::path imgPath,
                 return -1;
             }
 
-            imgType = block0Data.pcType[0];
+            imgType = block0Data->pcType[0];
 
             phosphor::logging::log<phosphor::logging::level::INFO>(
                 "Image Type", phosphor::logging::entry(
@@ -227,7 +231,7 @@ int Manager::verifyImage(const std::filesystem::path imgPath,
 
             phosphor::logging::log<phosphor::logging::level::INFO>(
                 "PFR image",
-                phosphor::logging::entry("PCType=%d", block0Data.pcType[0]),
+                phosphor::logging::entry("PCType=%d", block0Data->pcType[0]),
                 phosphor::logging::entry("VERSION=%s", version.c_str()));
 
             version =
-- 
2.25.1

