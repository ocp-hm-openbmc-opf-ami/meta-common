From 300e51856d7c0b94deb632f6855a4adfc5a46412 Mon Sep 17 00:00:00 2001
From: Zhikui Ren <zhikui.ren@intel.com>
Date: Fri, 19 Feb 2021 12:14:05 -0800
Subject: [PATCH] Fan Tach Sensor Threshold Ignore Zero

Currently there are systems that have system fans plugged
into different fan connectors. Fan present detection is
not supported in most of these systems. Critical low
threshold is asserted for the non-utilized fans
resulting in FSC boost all fans.

Skip threshold checking for fan tach reading less or equal
to zero. This is a temporary WA until a more robust solution
is available.

Note: with this workaround a completely non-working fan
will not be detected. FSC will still boost fans due to other
constraints if the system can't be cooled with the working fans.

Tested:
No cr event for the missing fans.

Signed-off-by: Zhikui Ren <zhikui.ren@intel.com>
Signed-off-by: Saravanan Palanisamy <saravanan.palanisamy@intel.com>
Change-Id: I6ef1d61573dcb8c15c0b76a6a6805f368be13fc0
---
 src/TachSensor.cpp | 15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

diff --git a/src/TachSensor.cpp b/src/TachSensor.cpp
index 9afe094..0770691 100644
--- a/src/TachSensor.cpp
+++ b/src/TachSensor.cpp
@@ -190,12 +190,19 @@ void TachSensor::handleResponse(const boost::system::error_code& err)
 
 void TachSensor::checkThresholds(void)
 {
-    bool status = thresholds::checkThresholds(this);
+    // WA - treat value <= 0 as not present
+    bool status = false;
 
-    if ((redundancy != nullptr) && *redundancy)
+    if (value > 0)
     {
-        (*redundancy)
-            ->update("/xyz/openbmc_project/sensors/fan_tach/" + name, !status);
+        status = thresholds::checkThresholds(this);
+
+        if (redundancy && *redundancy)
+        {
+            (*redundancy)
+                ->update("/xyz/openbmc_project/sensors/fan_tach/" + name,
+                         !status);
+        }
     }
 
     bool curLed = !status;
-- 
2.25.1

