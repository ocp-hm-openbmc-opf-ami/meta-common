From 9033f44cd3bf03f9e9f3fed3bc6f42fec0612a65 Mon Sep 17 00:00:00 2001
From: Anjaliintel-21 <anjali.ray@intel.com>
Date: Wed, 9 Aug 2023 11:39:22 +0000
Subject: [PATCH] Add Members to PowerSupplies

As Members were null,so we changed the busctl calls to add
odata.id in Members.

Tested:
{
    "@odata.id": "/redfish/v1/Chassis/BNC_Baseboard/PowerSubsystem/PowerSupplies",
    "@odata.type": "#PowerSupplyCollection.PowerSupplyCollection",
    "Description": "The collection of PowerSupply resource instances.",
    "Members": [
        {
            "@odata.id": "/redfish/v1/Chassis/BNC_Baseboard/PowerSubsystem/PowerSupplies/SOLUM_CO_IS162F22_PSU1"
        }
    ],
    "Members@odata.count": 1,
    "Name": "Power Supply Collection"
}
Validator Passed

Signed-off-by: Anjaliintel-21 <anjali.ray@intel.com>
---
 redfish-core/lib/power_supply.hpp | 24 +++++++++++-------------
 1 file changed, 11 insertions(+), 13 deletions(-)

diff --git a/redfish-core/lib/power_supply.hpp b/redfish-core/lib/power_supply.hpp
index c8fc5527..0c2f2e57 100644
--- a/redfish-core/lib/power_supply.hpp
+++ b/redfish-core/lib/power_supply.hpp
@@ -68,11 +68,8 @@ inline void
     asyncResp->res.jsonValue["Description"] =
         "The collection of PowerSupply resource instances.";
 
-    std::string powerPath = *validChassisPath + "/powered_by";
-    dbus::utility::getAssociatedSubTreePaths(
-        powerPath,
-        sdbusplus::message::object_path("/xyz/openbmc_project/inventory"), 0,
-        powerSupplyInterface,
+    dbus::utility::getSubTreePaths(
+        "/xyz/openbmc_project/inventory", 0, powerSupplyInterface,
         [asyncResp, chassisId](
             const boost::system::error_code& ec,
             const dbus::utility::MapperGetSubTreePathsResponse& subtreePaths) {
@@ -172,14 +169,11 @@ inline bool checkPowerSupplyId(const std::string& powerSupplyPath,
 
 inline void getValidPowerSupplyPath(
     const std::shared_ptr<bmcweb::AsyncResp>& asyncResp,
-    const std::string& validChassisPath, const std::string& powerSupplyId,
+    const std::string& powerSupplyId,
     std::function<void(const std::string& powerSupplyPath)>&& callback)
 {
-    std::string powerPath = validChassisPath + "/powered_by";
-    dbus::utility::getAssociatedSubTreePaths(
-        powerPath,
-        sdbusplus::message::object_path("/xyz/openbmc_project/inventory"), 0,
-        powerSupplyInterface,
+    dbus::utility::getSubTreePaths(
+        "/xyz/openbmc_project/inventory", 0, powerSupplyInterface,
         [asyncResp, powerSupplyId, callback{std::move(callback)}](
             const boost::system::error_code& ec,
             const dbus::utility::MapperGetSubTreePathsResponse& subtreePaths) {
@@ -477,7 +471,7 @@ inline void
     }
 
     // Get the correct Path and Service that match the input parameters
-    getValidPowerSupplyPath(asyncResp, *validChassisPath, powerSupplyId,
+    getValidPowerSupplyPath(asyncResp, powerSupplyId,
                             [asyncResp, chassisId, powerSupplyId](
                                 const std::string& powerSupplyPath) {
         asyncResp->res.addHeader(
@@ -493,7 +487,11 @@ inline void
 
         asyncResp->res.jsonValue["Status"]["State"] = "Enabled";
         asyncResp->res.jsonValue["Status"]["Health"] = "OK";
+        auto sensorAsyncResp = std::make_shared<SensorsAsyncResp>(
+            asyncResp, chassisId, sensors::dbus::powerPaths,
+            sensors::node::power);
 
+        getChassisData(sensorAsyncResp);
         dbus::utility::getDbusObject(
             powerSupplyPath, powerSupplyInterface,
             [asyncResp,
@@ -543,7 +541,7 @@ inline void
         }
 
         // Get the correct Path and Service that match the input parameters
-        getValidPowerSupplyPath(asyncResp, *validChassisPath, powerSupplyId,
+        getValidPowerSupplyPath(asyncResp, powerSupplyId,
                                 [asyncResp](const std::string&) {
             asyncResp->res.addHeader(
                 boost::beast::http::field::link,
-- 
2.17.1

