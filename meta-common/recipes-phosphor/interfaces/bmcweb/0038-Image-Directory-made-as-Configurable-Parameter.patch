From 7cbf38c62fafc18a9bea3543f91cb68eb09f2ace Mon Sep 17 00:00:00 2001
From: V-Sanjana <sanjana.v@intel.com>
Date: Tue, 21 Mar 2023 20:46:37 +0530
Subject: [PATCH] Image dir made as configurable parameter

The existing '/tmp/images' image directory has been made as
configurable parameter, so that the Oems can choose to store the
images to different directories.

By configuring the image directory in .bbappend files,
the image can be stored to that respective location.

Files modified:
bmcweb_%.bbappend
phosphor-software-manager_%.bbappend
fwupd-restricted.sh

Tested:

Tested and verified that the image directory is configurable,
and the image can be stored to required directories by
configuring it in the .bbappend files.
Signed-off-by: V-Sanjana <sanjana.v@intel.com>
Upstream-Status: Pending
---
 config/bmcweb_config.h.in           | 2 ++
 config/meson.build                  | 1 +
 include/image_upload.hpp            | 4 +++-
 meson_options.txt                   | 8 ++++++++
 redfish-core/lib/update_service.hpp | 2 +-
 5 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/config/bmcweb_config.h.in b/config/bmcweb_config.h.in
index a1bd1ba0..fed06d01 100644
--- a/config/bmcweb_config.h.in
+++ b/config/bmcweb_config.h.in
@@ -26,4 +26,6 @@ constexpr const bool bmcwebEnableMultiHost = @BMCWEB_ENABLE_MULTI_HOST@ == 1;
 constexpr const bool bmcwebEnableHTTP2 = @BMCWEB_ENABLE_HTTP2@ == 1;
 
 constexpr const bool bmcwebMTLSCommonNameParsingMeta = @BMCWEB_ENABLE_MTLS_COMMON_NAME_PARSING_META@ == 1;
+
+constexpr const char* imageUploadDir = "@IMAGE_UPLOAD_DIR@";
 // clang-format on
diff --git a/config/meson.build b/config/meson.build
index 1ba34afa..5dc3d474 100644
--- a/config/meson.build
+++ b/config/meson.build
@@ -2,6 +2,7 @@
 
 conf_data = configuration_data()
 conf_data.set('BMCWEB_HTTP_REQ_BODY_LIMIT_MB', get_option('http-body-limit'))
+conf_data.set('IMAGE_UPLOAD_DIR', get_option('image-upload-dir'))
 xss_enabled = get_option('insecure-disable-xss')
 conf_data.set10('BMCWEB_INSECURE_DISABLE_XSS_PREVENTION', xss_enabled.allowed())
 enable_redfish_query = get_option('insecure-enable-redfish-query')
diff --git a/include/image_upload.hpp b/include/image_upload.hpp
index ef615cb3..39850c30 100644
--- a/include/image_upload.hpp
+++ b/include/image_upload.hpp
@@ -1,5 +1,7 @@
 #pragma once
 
+#include "bmcweb_config.h"
+
 #include "app.hpp"
 #include "dbus_singleton.hpp"
 #include "dbus_utility.hpp"
@@ -91,7 +93,7 @@ inline void
         "member='InterfacesAdded',path='/xyz/openbmc_project/software'",
         callback);
 
-    std::string filepath("/tmp/images/" + bmcweb::getRandomUUID());
+    std::string filepath(imageUploadDir + bmcweb::getRandomUUID());
     BMCWEB_LOG_DEBUG("Writing file to {}", filepath);
     std::ofstream out(filepath, std::ofstream::out | std::ofstream::binary |
                                     std::ofstream::trunc);
diff --git a/meson_options.txt b/meson_options.txt
index 584ca702..cf1b59c2 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -223,6 +223,14 @@ option(
     description: 'Specifies the http request body length limit'
 )
 
+option(
+    'image-upload-dir',
+    type: 'string',
+    value: '/tmp/images/',
+    description: 'Directory where downloaded software images are placed.'
+)
+
+
 option(
     'redfish-new-powersubsystem-thermalsubsystem',
     type: 'feature',
diff --git a/redfish-core/lib/update_service.hpp b/redfish-core/lib/update_service.hpp
index 2d722354..404a4603 100644
--- a/redfish-core/lib/update_service.hpp
+++ b/redfish-core/lib/update_service.hpp
@@ -663,7 +663,7 @@ inline void requestRoutesUpdateServiceActionsSimpleUpdate(App& app)
 
 inline void uploadImageFile(crow::Response& res, std::string_view body)
 {
-    std::filesystem::path filepath("/tmp/images/" + bmcweb::getRandomUUID());
+    std::filesystem::path filepath(imageUploadDir + bmcweb::getRandomUUID());
 
     BMCWEB_LOG_DEBUG("Writing file to {}", filepath.string());
     std::ofstream out(filepath, std::ofstream::out | std::ofstream::binary |
-- 
2.34.1

