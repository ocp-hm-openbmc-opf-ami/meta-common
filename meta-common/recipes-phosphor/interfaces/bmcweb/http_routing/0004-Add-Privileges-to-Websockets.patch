From 31eb7160c95fddaa5caca70843a522e051f8df81 Mon Sep 17 00:00:00 2001
From: P Dheeraj Srujan Kumar <p.dheeraj.srujan.kumar@intel.com>
Date: Mon, 18 Oct 2021 22:58:29 +0530
Subject: [PATCH] Add Privileges to Websockets

This commit adds Privileges to Websockets.
In the current implementation, once a rule is upgraded (i.e. from
BaseRule to WebSocket), there is no provosion to add priviliges.
In this commit, WebSocket inherits PrivilegeParameterTraits to enable
privileges.

Also, in the earlier implementation, .privilege() was called after
BMCWEB_ROUTE(). This results in adding those privileges to the Base rule
that is created. By moving the privileges() below websocket(), the
privileges are applied to the websocket.

Tested:
 - websocket_test.py Passed
 - Only Admin privileged user able to access KVM, SOL and Virtual Media
   on WebUI
 - Operator and Readonly Users unable to access KVM, SOL and Virtual
   Media on WebUI

Change-Id: Iff2051dbb7d363c902fd463fa446f280adc6d648
Signed-off-by: P Dheeraj Srujan Kumar <p.dheeraj.srujan.kumar@intel.com>
Signed-off-by: Jayaprakash Mutyala <mutyalax.jayaprakash@intel.com>
---
 http/routing.hpp          | 4 +++-
 include/dbus_monitor.hpp  | 3 ++-
 include/kvm_websocket.hpp | 3 ++-
 include/nbd_proxy.hpp     | 1 +
 include/obmc_console.hpp  | 3 ++-
 include/vm_websocket.hpp  | 3 ++-
 6 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/http/routing.hpp b/http/routing.hpp
index 048dada7..f14a4cb7 100644
--- a/http/routing.hpp
+++ b/http/routing.hpp
@@ -308,7 +308,9 @@ struct PrivilegeParameterTraits
     }
 };
 
-class WebSocketRule : public BaseRule
+class WebSocketRule :
+    public BaseRule,
+    public PrivilegeParameterTraits<WebSocketRule>
 {
     using self_t = WebSocketRule;
 
diff --git a/include/dbus_monitor.hpp b/include/dbus_monitor.hpp
index 094f183e..3cc4880e 100644
--- a/include/dbus_monitor.hpp
+++ b/include/dbus_monitor.hpp
@@ -6,6 +6,7 @@
 
 #include <boost/container/flat_map.hpp>
 #include <boost/container/flat_set.hpp>
+#include <registries/privilege_registry.hpp>
 #include <sdbusplus/bus/match.hpp>
 #include <sdbusplus/message/types.hpp>
 #include <websocket.hpp>
@@ -111,8 +112,8 @@ inline int onPropertyUpdate(sd_bus_message* m, void* userdata,
 inline void requestRoutes(App& app)
 {
     BMCWEB_ROUTE(app, "/subscribe")
-        .privileges({{"Login"}})
         .websocket()
+        .privileges(redfish::privileges::privilegeSetLogin)
         .onopen([&](crow::websocket::Connection& conn) {
             BMCWEB_LOG_DEBUG << "Connection " << &conn << " opened";
             sessions.try_emplace(&conn);
diff --git a/include/kvm_websocket.hpp b/include/kvm_websocket.hpp
index 942e9c60..e4d97c85 100644
--- a/include/kvm_websocket.hpp
+++ b/include/kvm_websocket.hpp
@@ -5,6 +5,7 @@
 #include <sys/socket.h>
 
 #include <boost/container/flat_map.hpp>
+#include <registries/privilege_registry.hpp>
 #include <websocket.hpp>
 
 namespace crow
@@ -161,8 +162,8 @@ inline void requestRoutes(App& app)
     sessions.reserve(maxSessions);
 
     BMCWEB_ROUTE(app, "/kvm/0")
-        .privileges({{"ConfigureComponents", "ConfigureManager"}})
         .websocket()
+        .privileges(redfish::privileges::privilegeSetConfigureManager)
         .onopen([](crow::websocket::Connection& conn) {
             BMCWEB_LOG_DEBUG << "Connection " << &conn << " opened";
 
diff --git a/include/nbd_proxy.hpp b/include/nbd_proxy.hpp
index 8ca2ae7d..96dae8b8 100644
--- a/include/nbd_proxy.hpp
+++ b/include/nbd_proxy.hpp
@@ -388,6 +388,7 @@ inline void requestRoutes(App& app)
 {
     BMCWEB_ROUTE(app, "/nbd/<str>")
         .websocket()
+        .privileges(redfish::privileges::privilegeSetConfigureManager)
         .onopen(onOpen)
         .onclose(onClose)
         .onmessageex(onMessage);
diff --git a/include/obmc_console.hpp b/include/obmc_console.hpp
index cf90c0ed..7bd776ef 100644
--- a/include/obmc_console.hpp
+++ b/include/obmc_console.hpp
@@ -6,6 +6,7 @@
 
 #include <boost/asio/local/stream_protocol.hpp>
 #include <boost/container/flat_set.hpp>
+#include <registries/privilege_registry.hpp>
 #include <websocket.hpp>
 
 namespace crow
@@ -121,8 +122,8 @@ inline void connectHandler(const boost::system::error_code& ec)
 inline void requestRoutes(App& app)
 {
     BMCWEB_ROUTE(app, "/console0")
-        .privileges({{"OpenBMCHostConsole"}})
         .websocket()
+        .privileges(redfish::privileges::privilegeSetConfigureManager)
         .onopen(
             [](crow::websocket::Connection& conn) {
         BMCWEB_LOG_DEBUG << "Connection " << &conn << " opened";
diff --git a/include/vm_websocket.hpp b/include/vm_websocket.hpp
index fed36815..43d8038d 100644
--- a/include/vm_websocket.hpp
+++ b/include/vm_websocket.hpp
@@ -6,6 +6,7 @@
 #include <boost/process/async_pipe.hpp>
 #include <boost/process/child.hpp>
 #include <boost/process/io.hpp>
+#include <registries/privilege_registry.hpp>
 #include <websocket.hpp>
 
 #include <csignal>
@@ -167,8 +168,8 @@ static std::shared_ptr<Handler> handler;
 inline void requestRoutes(App& app)
 {
     BMCWEB_ROUTE(app, "/vm/0/0")
-        .privileges({{"ConfigureComponents", "ConfigureManager"}})
         .websocket()
+        .privileges(redfish::privileges::privilegeSetConfigureManager)
         .onopen([](crow::websocket::Connection& conn) {
             BMCWEB_LOG_DEBUG << "Connection " << &conn << " opened";
 
-- 
2.25.1

