From e68d00deaceb7a1270c644710f27fbdc8955d8de Mon Sep 17 00:00:00 2001
From: AppaRao Puli <apparao.puli@intel.com>
Date: Mon, 10 May 2021 12:32:30 +0530
Subject: [PATCH] Log Redfish Events for all subscription actions

Log redfish event for below 3 actions
 - New subscription
 - Update existing subscription properties
 - Delete existing subscription

This will help to log events for platform managebility.

Modified persistent API name to indicate the clear purpose.
Added updateSubscription method with subscription id param
to log event for subscription update.

Tested:
 - Message registry entry appears in the log for the corresponding
   subscription action.

Change-Id: Ie7065732184f17955b0669a3901ea54fb42cfef4
Signed-off-by: AppaRao Puli <apparao.puli@intel.com>
---
 .../include/event_service_manager.hpp         | 34 +++++++++++++++---
 .../registries/openbmc_message_registry.hpp   | 36 +++++++++++++++++++
 redfish-core/lib/event_service.hpp            |  2 +-
 3 files changed, 67 insertions(+), 5 deletions(-)

diff --git a/redfish-core/include/event_service_manager.hpp b/redfish-core/include/event_service_manager.hpp
index 57e9e763..8c7ee7f3 100644
--- a/redfish-core/include/event_service_manager.hpp
+++ b/redfish-core/include/event_service_manager.hpp
@@ -22,6 +22,7 @@
 #include "utility.hpp"
 
 #include <sys/inotify.h>
+#include <systemd/sd-journal.h>
 
 #include <boost/algorithm/string/classification.hpp>
 #include <boost/algorithm/string/split.hpp>
@@ -811,7 +812,7 @@ class EventServiceManager
         }
     }
 
-    void updateSubscriptionData() const
+    void persistSubscriptionData() const
     {
         persistent_data::EventServiceStore::getInstance()
             .eventServiceConfig.enabled = serviceEnabled;
@@ -858,7 +859,7 @@ class EventServiceManager
 
         if (updateConfig)
         {
-            updateSubscriptionData();
+            persistSubscriptionData();
         }
 
         if (updateRetryCfg)
@@ -970,7 +971,7 @@ class EventServiceManager
 
         if (updateFile)
         {
-            updateSubscriptionData();
+            persistSubscriptionData();
         }
 
 #ifndef BMCWEB_ENABLE_REDFISH_DBUS_LOG_ENTRIES
@@ -983,6 +984,12 @@ class EventServiceManager
         subValue->updateRetryConfig(retryAttempts, retryTimeoutInterval);
         subValue->updateRetryPolicy();
 
+        /* Log event for subscription addition */
+        sd_journal_send("MESSAGE=Event subscription added(Id: %s)", id.c_str(),
+                        "PRIORITY=%i", LOG_INFO, "REDFISH_MESSAGE_ID=%s",
+                        "OpenBMC.0.1.EventSubscriptionAdded",
+                        "REDFISH_MESSAGE_ARGS=%s", id.c_str(), NULL);
+
         return id;
     }
 
@@ -1003,7 +1010,14 @@ class EventServiceManager
                 persistent_data::EventServiceStore::getInstance()
                     .subscriptionsConfigMap.erase(obj2);
                 updateNoOfSubscribersCount();
-                updateSubscriptionData();
+                persistSubscriptionData();
+
+                /* Log event for subscription delete. */
+                sd_journal_send("MESSAGE=Event subscription removed.(Id = %s)",
+                                id.c_str(), "PRIORITY=%i", LOG_INFO,
+                                "REDFISH_MESSAGE_ID=%s",
+                                "OpenBMC.0.1.EventSubscriptionRemoved",
+                                "REDFISH_MESSAGE_ARGS=%s", id.c_str(), NULL);
             }
         }
     } 
@@ -1024,6 +1038,18 @@ class EventServiceManager
             }
         }
     }
+    void updateSubscription(const std::string& id) const
+    {
+        persistSubscriptionData();
+
+        /* Log event for subscription update. */
+        sd_journal_send("MESSAGE=Event subscription updated.(Id = %s)",
+                        id.c_str(), "PRIORITY=%i", LOG_INFO,
+                        "REDFISH_MESSAGE_ID=%s",
+                        "OpenBMC.0.1.EventSubscriptionUpdated",
+                        "REDFISH_MESSAGE_ARGS=%s", id.c_str(), NULL);
+    }
+
     size_t getNumberOfSubscriptions()
     {
         return subscriptionsMap.size();
diff --git a/redfish-core/include/registries/openbmc_message_registry.hpp b/redfish-core/include/registries/openbmc_message_registry.hpp
index 5339b911..5fae6619 100644
--- a/redfish-core/include/registries/openbmc_message_registry.hpp
+++ b/redfish-core/include/registries/openbmc_message_registry.hpp
@@ -475,6 +475,42 @@ constexpr std::array registry = {
                      {},
                      "None.",
                  }},
+    MessageEntry{
+        "EventSubscriptionAdded",
+        {
+            "Indicates that an Event subscription with specific id was added.",
+            "Event subscription with id %1 was added.",
+            "OK",
+            1,
+            {
+                "string",
+            },
+            "None.",
+        }},
+    MessageEntry{
+        "EventSubscriptionRemoved",
+        {
+            "Indicates that an Event subscription with specific id was removed.",
+            "Event subscription with id %1 was removed.",
+            "OK",
+            1,
+            {
+                "string",
+            },
+            "None.",
+        }},
+    MessageEntry{
+        "EventSubscriptionUpdated",
+        {
+            "Indicates that an Event subscription with specific id was updated.",
+            "Event subscription with id %1 was updated.",
+            "OK",
+            1,
+            {
+                "string",
+            },
+            "None.",
+        }},
     MessageEntry{"FanInserted",
                  {
                      "Indicates that a system fan has been inserted.",
diff --git a/redfish-core/lib/event_service.hpp b/redfish-core/lib/event_service.hpp
index 934dfca3..3cba1516 100644
--- a/redfish-core/lib/event_service.hpp
+++ b/redfish-core/lib/event_service.hpp
@@ -628,7 +628,7 @@ inline void requestRoutesEventDestination(App& app)
             subValue->updateRetryPolicy();
         }
 
-        EventServiceManager::getInstance().updateSubscriptionData();
+        EventServiceManager::getInstance().updateSubscription(param);
         });
     BMCWEB_ROUTE(app, "/redfish/v1/EventService/Subscriptions/<str>/")
         // The below privilege is wrong, it should be ConfigureManager OR
-- 
2.25.1

