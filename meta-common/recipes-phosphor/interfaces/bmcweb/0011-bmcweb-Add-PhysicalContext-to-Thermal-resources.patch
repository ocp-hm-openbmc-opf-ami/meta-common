From de0701adf36613b64cfd38c2b67f130054be3b02 Mon Sep 17 00:00:00 2001
From: Sunita Kumari <sunitax.kumari@intel.com>
Date: Mon, 19 Dec 2022 09:21:20 +0000
Subject: [PATCH] bmcweb: Add PhysicalContext to Temprature Sensors

Adding PhysicalContext to make redfish data compliance with OCP
Server Mgmt Interface v0.2.1.pdf and specific to Thermal resources.
https://github.com/opencomputeproject/OCP-Profiles/blob/master/
OCPServerHardwareManagement.v0_2_4.json
This change is required because all thermal sensors 
combined with Sensors URI and Thermal/Power URI have been deprecated.

Tested:
1. Redfish validator - passed for this new change
2.https://bmcip/redfish/v1/Chassis/XXBaseBoard/Sensors/temperature_CPU1_PVCCA_Controller_Temp

Response:
{
    "@odata.id": "/redfish/v1/Chassis/XXBaseboard/Sensors/temperature_CPU1_PVCCA_Controller_Temp",
    "@odata.type": "#Sensor.v1_2_0.Sensor",
    "Id": "Sensors_CPU1_PVCCA_Controller_Temp",
    "Name": "CPU1 PVCCA Controller Temp",
    "PhysicalContext": "CPU",
    "Reading": 34.0,
    "ReadingRangeMax": 127.0,
    "ReadingRangeMin": -128.0,
    "ReadingType": "Temperature",
    "ReadingUnits": "Cel",
    "Status": {
        "Health": "OK",
        "State": "Enabled"
    }
}
Signed-off-by: Snehalatha Venkatesh <snehalathax.v@intel.com>
Signed-off-by: Sunita Kumari <sunitax.kumari@intel.com>
---
 redfish-core/lib/sensors.hpp | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/redfish-core/lib/sensors.hpp b/redfish-core/lib/sensors.hpp
index b985cc6c..a73516b4 100644
--- a/redfish-core/lib/sensors.hpp
+++ b/redfish-core/lib/sensors.hpp
@@ -852,6 +852,25 @@ inline void objectPropertiesToJson(
         else
         {
             sensorJson["ReadingType"] = readingType;
+            if (readingType == sensor::ReadingType::Temperature)
+            {
+                if (sensorName.find("CPU") != std::string::npos)
+                {
+                    sensorJson["PhysicalContext"] = "CPU";
+                }
+                else if (sensorName.find("Inlet") != std::string::npos)
+                {
+                    sensorJson["PhysicalContext"] = "Intake";
+                }
+                else if (sensorName.find("HSBP") != std::string::npos)
+                {
+                    sensorJson["PhysicalContext"] = "Backplane";
+                }
+                else
+                {
+                    sensorJson["PhysicalContext"] = "SystemBoard";
+                }
+            }
         }
 
         std::string_view readingUnits = sensors::toReadingUnits(sensorType);
-- 
2.17.1

