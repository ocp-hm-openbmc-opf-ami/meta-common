From d0f148aee6926235a1926a56e99da3f3a52740c4 Mon Sep 17 00:00:00 2001
From: V-Sanjana <sanjana.v@intel.com>
Date: Mon, 12 Dec 2022 22:00:04 +0530
Subject: [PATCH] Revert "Fru-device : Extended support for 16bit logic bus"

This reverts commit 213ee21f5fc6132938a628ecf0d6c2553bcefa62.
---
 include/fru_utils.hpp |  2 +-
 src/fru_device.cpp    | 10 +++++-----
 src/fru_utils.cpp     |  2 +-
 3 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/include/fru_utils.hpp b/include/fru_utils.hpp
index d1784cd..f1d8e94 100644
--- a/include/fru_utils.hpp
+++ b/include/fru_utils.hpp
@@ -123,7 +123,7 @@ resCodes
     formatIPMIFRU(const std::vector<uint8_t>& fruBytes,
                   boost::container::flat_map<std::string, std::string>& result);
 
-std::vector<uint8_t>& getFRUInfo(const uint16_t& bus, const uint8_t& address);
+std::vector<uint8_t>& getFRUInfo(const uint8_t& bus, const uint8_t& address);
 
 uint8_t calculateChecksum(std::vector<uint8_t>::const_iterator iter,
                           std::vector<uint8_t>::const_iterator end);
diff --git a/src/fru_device.cpp b/src/fru_device.cpp
index 40a7449..cf0bcc3 100644
--- a/src/fru_device.cpp
+++ b/src/fru_device.cpp
@@ -954,7 +954,7 @@ bool writeFRU(uint8_t bus, uint8_t address, const std::vector<uint8_t>& fru)
 }
 
 void rescanOneBus(
-    BusMap& busmap, uint16_t busNum,
+    BusMap& busmap, uint8_t busNum,
     boost::container::flat_map<
         std::pair<size_t, size_t>,
         std::shared_ptr<sdbusplus::asio::dbus_interface>>& dbusInterfaceMap,
@@ -1117,7 +1117,7 @@ bool updateFRUProperty(
     std::vector<uint8_t> fruData;
     try
     {
-        fruData = getFRUInfo(static_cast<uint16_t>(bus),
+        fruData = getFRUInfo(static_cast<uint8_t>(bus),
                              static_cast<uint8_t>(address));
     }
     catch (const std::invalid_argument& e)
@@ -1328,14 +1328,14 @@ int main()
                      objServer, systemBus);
     });
 
-    iface->register_method("ReScanBus", [&](uint16_t bus) {
+    iface->register_method("ReScanBus", [&](uint8_t bus) {
         rescanOneBus(busMap, bus, dbusInterfaceMap, true, unknownBusObjectCount,
                      powerIsOn, objServer, systemBus);
     });
 
     iface->register_method("GetRawFru", getFRUInfo);
 
-    iface->register_method("WriteFru", [&](const uint16_t bus,
+    iface->register_method("WriteFru", [&](const uint8_t bus,
                                            const uint8_t address,
                                            const std::vector<uint8_t>& data) {
         if (!writeFRU(bus, address, data))
@@ -1415,7 +1415,7 @@ int main()
                                           << "\n";
                                 continue;
                             }
-                            rescanOneBus(busMap, static_cast<uint16_t>(bus),
+                            rescanOneBus(busMap, static_cast<uint8_t>(bus),
                                          dbusInterfaceMap, false,
                                          unknownBusObjectCount, powerIsOn,
                                          objServer, systemBus);
diff --git a/src/fru_utils.cpp b/src/fru_utils.cpp
index 4199439..e030ac8 100644
--- a/src/fru_utils.cpp
+++ b/src/fru_utils.cpp
@@ -768,7 +768,7 @@ unsigned int getHeaderAreaFieldOffset(fruAreas area)
     return static_cast<unsigned int>(area) + 1;
 }
 
-std::vector<uint8_t>& getFRUInfo(const uint16_t& bus, const uint8_t& address)
+std::vector<uint8_t>& getFRUInfo(const uint8_t& bus, const uint8_t& address)
 {
     auto deviceMap = busMap.find(bus);
     if (deviceMap == busMap.end())
-- 
2.17.1

