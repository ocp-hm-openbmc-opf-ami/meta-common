From 8377d7670717241532c21920788bb25db686a130 Mon Sep 17 00:00:00 2001
From: thrishalig <thrishalig@ami.com>
Date: Thu, 16 May 2024 14:00:49 +0530
Subject: [PATCH] Recreated patch 
 0001-allow-dbus-sensors-without-thresholds.patch

allow dbus sensors without thresholds

catch dbus exceptions when query for thresholds interfaces.
log messages and continue.

intel details:
Signed-off-by: Zhikui Ren <zhikui.ren@intel.com>
Upstream-Status: Pending

Signed-off-by: thrishalig <thrishalig@ami.com>
---
 dbus/dbusconfiguration.cpp | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/dbus/dbusconfiguration.cpp b/dbus/dbusconfiguration.cpp
index 1e9d6df..f801b4b 100644
--- a/dbus/dbusconfiguration.cpp
+++ b/dbus/dbusconfiguration.cpp
@@ -343,14 +343,15 @@ void populatePidInfo(
         // named threshold, it is OK, because the SetPointOffset parser
         // splits up the input into individual vectors, each with only a
         // single element, if it detects that SetPointOffset is in use.
-        const std::string& path =
-            sensorConfig.at(info.inputs.front().name).readPath;
-
-        DbusHelper helper(sdbusplus::bus::new_system());
-        std::string service = helper.getService(interface, path);
         double reading = 0;
         try
         {
+            const std::string& path =
+                sensorConfig.at(info.inputs.front().name).readPath;
+
+            DbusHelper helper(sdbusplus::bus::new_system());
+            std::string service = helper.getService(interface, path);
+
             helper.getProperty(service, path, interface, *thresholdProperty,
                                reading);
         }
-- 
2.25.1

