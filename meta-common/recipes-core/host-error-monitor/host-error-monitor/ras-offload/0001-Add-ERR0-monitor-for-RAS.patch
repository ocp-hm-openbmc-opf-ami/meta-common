From fe2ce874d443650326c08bbc30f2664da39a73fa Mon Sep 17 00:00:00 2001
From: "Jason M. Bills" <jason.m.bills@intel.com>
Date: Wed, 23 Mar 2022 15:38:09 -0700
Subject: [PATCH] Add ERR0 monitor for RAS

This adds an ERR0 monitor that calls the RAS manager "HandleERR0"
method when ERR0 asserts.

Tested:
Manually asserted ERR0 and confirmed that RAS manager is called.

Signed-off-by: Jason M. Bills <jason.m.bills@intel.com>
Change-Id: Ic97f1972d60900ed8d3b6eff459a60537faef41c
Upstream-Status: Pending
---
 include/error_monitors/err0_monitor.hpp | 55 +++++++++++++++++++++++++
 1 file changed, 55 insertions(+)
 create mode 100644 include/error_monitors/err0_monitor.hpp

diff --git a/include/error_monitors/err0_monitor.hpp b/include/error_monitors/err0_monitor.hpp
new file mode 100644
index 0000000..b560477
--- /dev/null
+++ b/include/error_monitors/err0_monitor.hpp
@@ -0,0 +1,55 @@
+/*
+// Copyright (c) 2022 Intel Corporation
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+*/
+#pragma once
+#include <error_monitors/err_pin_monitor.hpp>
+#include <host_error_monitor.hpp>
+#include <sdbusplus/asio/object_server.hpp>
+
+#include <iostream>
+
+namespace host_error_monitor::err0_monitor
+{
+static constexpr bool debug = false;
+
+class Err0Monitor : public host_error_monitor::err_pin_monitor::ErrPinMonitor
+{
+    void assertHandler() override
+    {
+        host_error_monitor::err_pin_monitor::ErrPinMonitor::assertHandler();
+
+        conn->async_method_call(
+            [this](boost::system::error_code ec,
+                   const std::variant<bool>& property) {
+                if (ec)
+                {
+                    std::cerr << "Error calling ERR0 handler\n";
+                    return;
+                }
+                std::cerr << "ERR0 handler called\n";
+            },
+            "com.intel.RAS", "/com/intel/ras", "com.intel.RAS.Manager",
+            "HandleERR0");
+    }
+
+  public:
+    Err0Monitor(boost::asio::io_service& io,
+                std::shared_ptr<sdbusplus::asio::connection> conn,
+                const std::string& signalName) :
+        host_error_monitor::err_pin_monitor::ErrPinMonitor(io, conn, signalName,
+                                                           0)
+    {}
+};
+} // namespace host_error_monitor::err0_monitor
-- 
2.25.1

