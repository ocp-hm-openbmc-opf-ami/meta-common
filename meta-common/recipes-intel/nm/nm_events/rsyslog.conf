template(name="ms" type="string"
string="%timereported:1:3:date-subseconds%")
template(name="unixtimestamp_ms" type="string"
string="%timereported:::date-unixtimestamp%%$.ms%")
set $.ms = exec_template("ms");
if ($.ms == "0") then {
    set $.ms = "000";
}
set $.unixtimestamp_ms = exec_template("unixtimestamp_ms");


# Template for NodeManager events SMART START
template(name="NmSmartEventsStart" type="list" option.jsonf="on" option.casesensitive="on") {
    property(outname="StartTimestamp" name="$.unixtimestamp_ms" onEmpty="null" format="jsonf")
    constant(outname="Tag" value="+" format="jsonf")
    constant(outname="From" value="S" format="jsonf")
    property(outname="Reason" name="$!MESSAGE" position.from="32" onEmpty="null" format="jsonf")
}

# Template for NodeManager events SMART STOP
template(name="NmSmartEventsStop" type="list" option.jsonf="on" option.casesensitive="on") {
    property(outname="StartTimestamp" name="$.unixtimestamp_ms" onEmpty="null" format="jsonf")
    constant(outname="Tag" value="-" format="jsonf")
    constant(outname="From" value="S" format="jsonf")
}


if ($!MESSAGE startswith "smart smart: SMART_EVENT,START") then {
    action(type="omfile" file="/var/log/nm_events" template="NmSmartEventsStart")
} else if ($!MESSAGE startswith "smart smart: SMART_EVENT,STOP") then {
    action(type="omfile" file="/var/log/nm_events" template="NmSmartEventsStop")
}


# Template for NodeManager events NM START/STOP
template(name="NmSmartEvents" type="list" option.casesensitive="on") {
    constant(value="{")
    property(outname="StartTimestamp" name="$.unixtimestamp_ms" onEmpty="null" format="jsonf")
    constant(value=",")
    property(outname="Tag" name="$!NM_EVENT_TYPE" onEmpty="null" format="jsonf")
    constant(value=",")
    property(outname="Id" name="$!NM_ENTRY_ID" onEmpty="null" format="jsonf")
    constant(value=",")
    constant(outname="From" value="N" format="jsonf")
    constant(value=",")
    constant(value="\"Policy\":")
    property(name="$!NM_POLICY_JSON")
    constant(value="}\n")
}

# Template for NodeManager events NM RESET
template(name="NmSmartEventsReset" type="list" option.jsonf="on" option.casesensitive="on") {
    property(outname="StartTimestamp" name="$.unixtimestamp_ms" onEmpty="null" format="jsonf")
    property(outname="Tag" name="$!NM_EVENT_TYPE" onEmpty="null" format="jsonf")
    constant(outname="From" value="N" format="jsonf")
}


if ($!NM_EVENT_TYPE != "" ) then {
   if($!NM_EVENT_TYPE != "R" ) then {
      action(type="omfile" file="/var/log/nm_events" template="NmSmartEvents")
   } else if ($!NM_EVENT_TYPE == "R") then {
       action(type="omfile" file="/var/log/nm_events" template="NmSmartEventsReset")
   }
}
