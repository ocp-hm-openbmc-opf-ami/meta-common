From 4026d7cd274681f5f7e7c9223ddfddc17af894cc Mon Sep 17 00:00:00 2001
From: eddyhan <eddyhan@ami.com>
Date: Thu, 2 Feb 2023 20:13:42 -0800
Subject: [PATCH] create libspdm.


diff --git a/library/spdm_common_lib/CMakeLists.txt b/library/spdm_common_lib/CMakeLists.txt
old mode 100644
new mode 100755
index a42fc703..1629db75
--- a/library/spdm_common_lib/CMakeLists.txt
+++ b/library/spdm_common_lib/CMakeLists.txt
@@ -13,3 +13,5 @@ SET(src_spdm_common_lib
 )
 
 ADD_LIBRARY(spdm_common_lib STATIC ${src_spdm_common_lib})
+list(APPEND SPDM_OBJECTS $<TARGET_OBJECTS:spdm_common_lib>)
+set(SPDM_OBJECTS ${SPDM_OBJECTS} PARENT_SCOPE)
diff --git a/library/spdm_crypt_lib/CMakeLists.txt b/library/spdm_crypt_lib/CMakeLists.txt
old mode 100644
new mode 100755
index 96f69538..228a4253
--- a/library/spdm_crypt_lib/CMakeLists.txt
+++ b/library/spdm_crypt_lib/CMakeLists.txt
@@ -14,3 +14,5 @@ SET(src_spdm_crypt_lib
 )
 
 ADD_LIBRARY(spdm_crypt_lib STATIC ${src_spdm_crypt_lib})
+list(APPEND SPDM_OBJECTS $<TARGET_OBJECTS:spdm_crypt_lib>)
+set(SPDM_OBJECTS ${SPDM_OBJECTS} PARENT_SCOPE)
diff --git a/library/spdm_requester_lib/CMakeLists.txt b/library/spdm_requester_lib/CMakeLists.txt
old mode 100644
new mode 100755
index 31d4e394..4fce7504
--- a/library/spdm_requester_lib/CMakeLists.txt
+++ b/library/spdm_requester_lib/CMakeLists.txt
@@ -32,3 +32,5 @@ SET(src_spdm_requester_lib
 )
 
 ADD_LIBRARY(spdm_requester_lib STATIC ${src_spdm_requester_lib})
+list(APPEND SPDM_OBJECTS $<TARGET_OBJECTS:spdm_requester_lib>)
+set(SPDM_OBJECTS ${SPDM_OBJECTS} PARENT_SCOPE)
diff --git a/library/spdm_responder_lib/CMakeLists.txt b/library/spdm_responder_lib/CMakeLists.txt
old mode 100644
new mode 100755
index ffefcc1d..627b4543
--- a/library/spdm_responder_lib/CMakeLists.txt
+++ b/library/spdm_responder_lib/CMakeLists.txt
@@ -36,4 +36,6 @@ SET(src_spdm_responder_lib
     libspdm_rsp_chunk_get.c
 )
 
-ADD_LIBRARY(spdm_responder_lib STATIC ${src_spdm_responder_lib})
\ No newline at end of file
+ADD_LIBRARY(spdm_responder_lib STATIC ${src_spdm_responder_lib})
+list(APPEND SPDM_OBJECTS $<TARGET_OBJECTS:spdm_responder_lib>)
+set(SPDM_OBJECTS ${SPDM_OBJECTS} PARENT_SCOPE)
diff --git a/library/spdm_secured_message_lib/CMakeLists.txt b/library/spdm_secured_message_lib/CMakeLists.txt
old mode 100644
new mode 100755
index 0fa7cdd3..88b8b5ed
--- a/library/spdm_secured_message_lib/CMakeLists.txt
+++ b/library/spdm_secured_message_lib/CMakeLists.txt
@@ -10,3 +10,5 @@ SET(src_spdm_secured_message_lib
 )
 
 ADD_LIBRARY(spdm_secured_message_lib STATIC ${src_spdm_secured_message_lib})
+list(APPEND SPDM_OBJECTS $<TARGET_OBJECTS:spdm_secured_message_lib>)
+set(SPDM_OBJECTS ${SPDM_OBJECTS} PARENT_SCOPE)
diff --git a/library/spdm_transport_mctp_lib/CMakeLists.txt b/library/spdm_transport_mctp_lib/CMakeLists.txt
old mode 100644
new mode 100755
index da6a29d3..e9e3ecaf
--- a/library/spdm_transport_mctp_lib/CMakeLists.txt
+++ b/library/spdm_transport_mctp_lib/CMakeLists.txt
@@ -8,3 +8,5 @@ SET(src_spdm_transport_mctp_lib
 )
 
 ADD_LIBRARY(spdm_transport_mctp_lib STATIC ${src_spdm_transport_mctp_lib})
+list(APPEND SPDM_OBJECTS $<TARGET_OBJECTS:spdm_transport_mctp_lib>)
+set(SPDM_OBJECTS ${SPDM_OBJECTS} PARENT_SCOPE)
diff --git a/library/spdm_transport_pcidoe_lib/CMakeLists.txt b/library/spdm_transport_pcidoe_lib/CMakeLists.txt
old mode 100644
new mode 100755
index af7121f2..74690be1
--- a/library/spdm_transport_pcidoe_lib/CMakeLists.txt
+++ b/library/spdm_transport_pcidoe_lib/CMakeLists.txt
@@ -8,3 +8,5 @@ SET(src_spdm_transport_pcidoe_lib
 )
 
 ADD_LIBRARY(spdm_transport_pcidoe_lib STATIC ${src_spdm_transport_pcidoe_lib})
+list(APPEND SPDM_OBJECTS $<TARGET_OBJECTS:spdm_transport_pcidoe_lib>)
+set(SPDM_OBJECTS ${SPDM_OBJECTS} PARENT_SCOPE)
diff --git a/os_stub/cryptlib_openssl/CMakeLists.txt b/os_stub/cryptlib_openssl/CMakeLists.txt
old mode 100644
new mode 100755
index b444f27b..65a88cd5
--- a/os_stub/cryptlib_openssl/CMakeLists.txt
+++ b/os_stub/cryptlib_openssl/CMakeLists.txt
@@ -14,6 +14,8 @@ if (ARCH STREQUAL "ia32")
     ADD_COMPILE_OPTIONS(-DLIBSPDM_CPU_IA32)
 elseif (ARCH STREQUAL "x64")
     ADD_COMPILE_OPTIONS(-DLIBSPDM_CPU_X64)
+elseif (ARCH STREQUAL "arm")
+    ADD_COMPILE_OPTIONS(-DLIBSPDM_CPU_ARM)
 endif()
 
 SET(src_cryptlib_openssl
@@ -43,3 +45,5 @@ SET(src_cryptlib_openssl
 
 ADD_LIBRARY(cryptlib_openssl STATIC ${src_cryptlib_openssl})
 TARGET_COMPILE_OPTIONS(cryptlib_openssl PRIVATE ${OPENSSL_FLAGS})
+list(APPEND SPDM_OBJECTS $<TARGET_OBJECTS:cryptlib_openssl>)
+set(SPDM_OBJECTS ${SPDM_OBJECTS} PARENT_SCOPE)
diff --git a/os_stub/debuglib/CMakeLists.txt b/os_stub/debuglib/CMakeLists.txt
old mode 100644
new mode 100755
index 80fbde14..4f9d6ffd
--- a/os_stub/debuglib/CMakeLists.txt
+++ b/os_stub/debuglib/CMakeLists.txt
@@ -8,3 +8,7 @@ SET(src_debuglib
 )
 
 ADD_LIBRARY(debuglib STATIC ${src_debuglib})
+if(NOT CMAKE_BUILD_TYPE STREQUAL "Release")
+list(APPEND SPDM_OBJECTS $<TARGET_OBJECTS:debuglib>)
+set(SPDM_OBJECTS ${SPDM_OBJECTS} PARENT_SCOPE)
+endif()
diff --git a/os_stub/debuglib_null/CMakeLists.txt b/os_stub/debuglib_null/CMakeLists.txt
index cc23febf..0ac6db85 100644
--- a/os_stub/debuglib_null/CMakeLists.txt
+++ b/os_stub/debuglib_null/CMakeLists.txt
@@ -8,3 +8,7 @@ SET(src_debuglib_null
 )
 
 ADD_LIBRARY(debuglib_null STATIC ${src_debuglib_null})
+if(CMAKE_BUILD_TYPE STREQUAL "Release")
+list(APPEND SPDM_OBJECTS $<TARGET_OBJECTS:debuglib_null>)
+set(SPDM_OBJECTS ${SPDM_OBJECTS} PARENT_SCOPE)
+endif()
diff --git a/os_stub/malloclib/CMakeLists.txt b/os_stub/malloclib/CMakeLists.txt
old mode 100644
new mode 100755
index 35d85829..d4226ea2
--- a/os_stub/malloclib/CMakeLists.txt
+++ b/os_stub/malloclib/CMakeLists.txt
@@ -8,3 +8,5 @@ SET(src_malloclib
 )
 
 ADD_LIBRARY(malloclib STATIC ${src_malloclib})
+list(APPEND SPDM_OBJECTS $<TARGET_OBJECTS:malloclib>)
+set(SPDM_OBJECTS ${SPDM_OBJECTS} PARENT_SCOPE)
diff --git a/os_stub/memlib/CMakeLists.txt b/os_stub/memlib/CMakeLists.txt
old mode 100644
new mode 100755
index 7632b2e7..1064916a
--- a/os_stub/memlib/CMakeLists.txt
+++ b/os_stub/memlib/CMakeLists.txt
@@ -11,3 +11,5 @@ SET(src_memlib
 )
 
 ADD_LIBRARY(memlib STATIC ${src_memlib})
+list(APPEND SPDM_OBJECTS $<TARGET_OBJECTS:memlib>)
+set(SPDM_OBJECTS ${SPDM_OBJECTS} PARENT_SCOPE)
diff --git a/os_stub/openssllib/CMakeLists.txt b/os_stub/openssllib/CMakeLists.txt
old mode 100644
new mode 100755
index a722e5b1..8e6ebae8
--- a/os_stub/openssllib/CMakeLists.txt
+++ b/os_stub/openssllib/CMakeLists.txt
@@ -1,6 +1,6 @@
 cmake_minimum_required(VERSION 2.8.12)
 
-ADD_COMPILE_OPTIONS(-DL_ENDIAN -DOPENSSL_SMALL_FOOTPRINT -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -DOPENSSL_SYS_UEFI=1 ${OPENSSL_FLAGS})
+ADD_COMPILE_OPTIONS(-DL_ENDIAN -DOPENSSL_SMALL_FOOTPRINT -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -DOPENSSL_SYS_UEFI=1 ${OPENSSL_FLAGS} -Wno-error=implicit-function-declaration)
 
 if(CMAKE_SYSTEM_NAME MATCHES "Windows" AND (ARCH STREQUAL "x64" OR ARCH STREQUAL "ia32"))
     if(TOOLCHAIN STREQUAL "VS2015" OR TOOLCHAIN STREQUAL "VS2019" OR TOOLCHAIN STREQUAL "VS2022" OR TOOLCHAIN STREQUAL "GCC")
@@ -16,6 +16,8 @@ if (ARCH STREQUAL "ia32")
     ADD_COMPILE_OPTIONS(-DLIBSPDM_CPU_IA32)
 elseif (ARCH STREQUAL "x64")
     ADD_COMPILE_OPTIONS(-DLIBSPDM_CPU_X64)
+elseif (ARCH STREQUAL "arm")
+    ADD_COMPILE_OPTIONS(-DLIBSPDM_CPU_ARM)
 endif()
 
 INCLUDE_DIRECTORIES(${LIBSPDM_DIR}/include
@@ -560,3 +562,5 @@ SET(src_openssllib
 )
 
 ADD_LIBRARY(openssllib STATIC ${src_openssllib})
+list(APPEND SPDM_OBJECTS $<TARGET_OBJECTS:openssllib>)
+set(SPDM_OBJECTS ${SPDM_OBJECTS} PARENT_SCOPE)
diff --git a/os_stub/platform_lib/CMakeLists.txt b/os_stub/platform_lib/CMakeLists.txt
old mode 100644
new mode 100755
index 8105ec00..7527585e
--- a/os_stub/platform_lib/CMakeLists.txt
+++ b/os_stub/platform_lib/CMakeLists.txt
@@ -21,3 +21,5 @@ SET(src_platform_lib
 endif()
 
 ADD_LIBRARY(platform_lib STATIC ${src_platform_lib})
+list(APPEND SPDM_OBJECTS $<TARGET_OBJECTS:platform_lib>)
+set(SPDM_OBJECTS ${SPDM_OBJECTS} PARENT_SCOPE)
diff --git a/os_stub/rnglib/CMakeLists.txt b/os_stub/rnglib/CMakeLists.txt
old mode 100644
new mode 100755
index a053d714..6a4b1bd5
--- a/os_stub/rnglib/CMakeLists.txt
+++ b/os_stub/rnglib/CMakeLists.txt
@@ -20,3 +20,5 @@ SET(src_rnglib
 endif()
 
 ADD_LIBRARY(rnglib STATIC ${src_rnglib})
+list(APPEND SPDM_OBJECTS $<TARGET_OBJECTS:rnglib>)
+set(SPDM_OBJECTS ${SPDM_OBJECTS} PARENT_SCOPE)
diff --git a/os_stub/spdm_crypt_ext_lib/CMakeLists.txt b/os_stub/spdm_crypt_ext_lib/CMakeLists.txt
index 825ddd36..1b26ae8e 100644
--- a/os_stub/spdm_crypt_ext_lib/CMakeLists.txt
+++ b/os_stub/spdm_crypt_ext_lib/CMakeLists.txt
@@ -9,3 +9,6 @@ SET(src_spdm_crypt_ext_lib
 )
 
 ADD_LIBRARY(spdm_crypt_ext_lib STATIC ${src_spdm_crypt_ext_lib})
+list(APPEND SPDM_OBJECTS $<TARGET_OBJECTS:spdm_crypt_ext_lib>)
+set(SPDM_OBJECTS ${SPDM_OBJECTS} PARENT_SCOPE)
+
diff --git a/os_stub/spdm_device_secret_lib_sample/CMakeLists.txt b/os_stub/spdm_device_secret_lib_sample/CMakeLists.txt
old mode 100644
new mode 100755
index 27aead1d..c2e3ad65
--- a/os_stub/spdm_device_secret_lib_sample/CMakeLists.txt
+++ b/os_stub/spdm_device_secret_lib_sample/CMakeLists.txt
@@ -12,3 +12,5 @@ SET(src_spdm_device_secret_lib_sample
 )
 
 ADD_LIBRARY(spdm_device_secret_lib_sample STATIC ${src_spdm_device_secret_lib_sample})
+list(APPEND SPDM_OBJECTS $<TARGET_OBJECTS:spdm_device_secret_lib_sample>)
+set(SPDM_OBJECTS ${SPDM_OBJECTS} PARENT_SCOPE)
-- 
2.25.1

