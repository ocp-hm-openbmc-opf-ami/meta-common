From 5778855d6b72dc3eabe9625c6194a5b41036976a Mon Sep 17 00:00:00 2001
From: Anoop S <anoopx.s@intel.com>
Date: Wed, 1 Mar 2023 05:06:40 +0000
Subject: [PATCH] CTL:Kernel not switching after firmware update.

This changes fix the issue after the firmware update on passive
partition, The kernel is not switching to updated image and boot.
Still loaded with old kernel image.

Test Result:
1.After dediprog flash system booted fine.
2.After firmware update the kernel should switch to
  new image partition and boot fine.

Signed-off-by: Anoop S <anoopx.s@intel.com>
Upstream-Status: Pending
---
 env/env.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/env/env.c b/env/env.c
index 606b60bd02..69aa07beb1 100644
--- a/env/env.c
+++ b/env/env.c
@@ -182,6 +182,7 @@ void env_set_bootcmd(void)
         */
         #define BBSRAM_BASE 0x1E6EF000
         #define BBSRAM_OFFSET 0x100
+        #define IMAGE_A 0x01
         #define IMAGE_B 0x02
         /* The function hw_sha256 from  the file aspeed_hace.c, uses sha_digest
         * internally which checks if the data is present in the RAM otherwise
@@ -189,9 +190,14 @@ void env_set_bootcmd(void)
         * loading the image to SRAM then using the crypto engine to verify .
         * To align with ImageA same done below in the case of ImageB.
         */
+        #define BOOT_COMMAND_IMAGE_A "fdt addr 20b00000 && fdt header get fitsize totalsize && cp.b 20b00000 83000000 ${fitsize} && bootm; echo Error loading kernel FIT image"
         #define BOOT_COMMAND_IMAGE_B "fdt addr 240A0000 && fdt header get fitsize totalsize && cp.b 240A0000 83000000 ${fitsize} && bootm; echo Error loading kernel FIT image"
         u32 img_sel = readl(BBSRAM_BASE + BBSRAM_OFFSET);
-        if(img_sel == IMAGE_B)
+        if(img_sel == IMAGE_A)
+        {
+            env_set("bootcmd", BOOT_COMMAND_IMAGE_A);
+        }
+        else if(img_sel == IMAGE_B)
         {
             env_set("bootcmd", BOOT_COMMAND_IMAGE_B);
         }
-- 
2.17.1

