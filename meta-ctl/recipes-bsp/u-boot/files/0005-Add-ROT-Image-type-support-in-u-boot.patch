From 883aba8766b17c8e4d209c5862409795314ad2e9 Mon Sep 17 00:00:00 2001
From: balajhidn <balajhix.neelakantan.durvas@intel.com>
Date: Wed, 13 Jul 2022 08:45:15 +0000
Subject: [PATCH] Add ROT Image type support in u-boot

Add support in U-boot to allow BMC ROT image firmware update

Tested:
Verify and flashing success with ROT image type 0xf1
Reboot and confirmed the image boots

Signed-off-by: Gade-RajasekharReddy <raja.sekhar.reddy.gade@intel.com>
Signed-off-by: balajhidn <balajhix.neelakantan.durvas@intel.com>
Upstream-Status: Pending
---
 board/aspeed/ast2600_intel/fw-update.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/board/aspeed/ast2600_intel/fw-update.c b/board/aspeed/ast2600_intel/fw-update.c
index 3784bc6d68..dc773a303f 100644
--- a/board/aspeed/ast2600_intel/fw-update.c
+++ b/board/aspeed/ast2600_intel/fw-update.c
@@ -114,6 +114,7 @@ struct cancel_payload
 } __attribute__((packed));
 
 uint32_t pfr_pc_type_bmc_update = 0x04;
+uint32_t pc_type_rot_update = 0xf1;
 uint32_t pfr_pc_type_cancel_cert = 0x100;
 size_t pfr_bmc_max_size = 32 * 1024 * 1024;    // 32 MB
 
@@ -166,6 +167,7 @@ uint32_t curve_secp384r1 = 0x08f07b47;
 uint32_t sig_magic_secp256r1 = 0xde64437d;
 uint32_t sig_magic_secp384r1 = 0xea2a50e9;
 uint32_t pfr_perm_sign_bmc_update = 0x08;
+uint32_t perm_sign_rot_update = 0x08;
 uint32_t pfr_perm_sign_all = -1;
 uint32_t key_non_cancellable = -1;
 
@@ -351,7 +353,7 @@ static bool is_block0_valid(const struct blk0* b0, const uint8_t* protected_cont
 	// Verify length of Protected Content (PC) is not larger than allowed
 	uint32_t pc_type = b0->pc_type;
 
-	if (pc_type == pfr_pc_type_bmc_update)
+	if ( (pc_type == pfr_pc_type_bmc_update) || (pc_type == pc_type_rot_update) )
 	{
 		// For PFM, there's no max size, but it should be smaller than a capsule
 		// size for sure.
@@ -510,6 +512,10 @@ static inline uint32_t get_required_perm(uint32_t pc_type)
 	{
 		return pfr_perm_sign_bmc_update;
 	}
+	else if (pc_type == pc_type_rot_update)
+	{
+		return perm_sign_rot_update;
+	}
 	else
 	{
 		printf("Bad pc_type: %d\n", pc_type);
-- 
2.25.1

