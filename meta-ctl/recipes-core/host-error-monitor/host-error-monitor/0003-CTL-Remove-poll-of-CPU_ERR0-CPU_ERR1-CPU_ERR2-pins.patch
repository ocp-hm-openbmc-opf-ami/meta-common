From 82ba545ee7fd1662368d81cc3f94d031708c402d Mon Sep 17 00:00:00 2001
From: vijayabharathi shetty <vijayabharathix.shetty@intel.com>
Date: Tue, 4 Oct 2022 13:26:04 +0000
Subject: [PATCH] CTL:Remove poll of CPU_ERR0,CPU_ERR1,CPU_ERR2 pins

CPU_ERR0, CPU_ERR1 and CPU_ERR2 gpio pins are grounded for ctl
schematic. Hence removed polling of the pins to avoid unnecessary
logging of critical events.
The code changes include removal of CPU_ERR0, CPU_ERR1 and CPU_ERR2
pin or signal polling in host-error-monitor. Few crashlog monitoring
patches make use of CPU_ERR2 signals which are not applicable for ctl,
so removed them as well.

Tested:
Before code changes:
1) Critical event logs on CPU Error occurred: ERR0, ERR1 and ERR2 Timeout
   are observed
2) From gpioinfo,
   line  24:   "CPU_ERR0" "host-error-monitor" input active-high [used]
   line  25:   "CPU_ERR1" "host-error-monitor" input active-high [used]
   line  26:   "CPU_ERR2" "host-error-monitor" input active-high [used]

After code changes:
1) No critical event logs on ERR0, ERR1 and ERR2 Timeout
2) From gpioinfo,
   line  24:   "CPU_ERR0"       unused   input  active-high
   line  25:   "CPU_ERR1"       unused   input  active-high
   line  26:   "CPU_ERR2"       unused   input  active-high
3) xyz.openbmc_project.HostErrorMonitor.service is up and running
4) Able to collect crashlog successfully

Signed-off-by: vijayabharathi shetty <vijayabharathix.shetty@intel.com>
Upstream-Status: Pending
---
 CMakeLists.txt             |  4 ++++
 include/error_monitors.hpp | 10 ++++++++++
 2 files changed, 14 insertions(+)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index b8457ce..8969b78 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -4,6 +4,10 @@ include (ExternalProject)
 set (CMAKE_CXX_STANDARD 20)
 set (CMAKE_CXX_STANDARD_REQUIRED ON)
 
+if (CTL)
+    add_definitions(-DCTL_FEATURE_DISABLE)
+endif ()
+
 add_executable (host-error-monitor src/host_error_monitor.cpp)
 
 option (HOST_ERROR_CRASHDUMP_ON_SMI_TIMEOUT "Enable crashdump on SMI Timeout."
diff --git a/include/error_monitors.hpp b/include/error_monitors.hpp
index 1d1ad6a..e0eaf5c 100644
--- a/include/error_monitors.hpp
+++ b/include/error_monitors.hpp
@@ -17,8 +17,10 @@
 #include <error_monitors/cpld_crc_monitor.hpp>
 #include <error_monitors/cpu_mismatch_monitor.hpp>
 #include <error_monitors/cpu_thermtrip_monitor.hpp>
+#ifndef CTL_FEATURE_DISABLE
 #include <error_monitors/err2_monitor.hpp>
 #include <error_monitors/err_pin_monitor.hpp>
+#endif
 #include <error_monitors/ierr_monitor.hpp>
 #include <error_monitors/mem_thermtrip_monitor.hpp>
 #include <error_monitors/pch_thermtrip_monitor.hpp>
@@ -38,12 +40,14 @@ static std::unique_ptr<
 static std::unique_ptr<
     host_error_monitor::cpu_mismatch_monitor::CPUMismatchMonitor>
     cpu2MismatchMonitor;
+#ifndef CTL_FEATURE_DISABLE
 static std::unique_ptr<host_error_monitor::err_pin_monitor::ErrPinMonitor>
     err0Monitor;
 static std::unique_ptr<host_error_monitor::err_pin_monitor::ErrPinMonitor>
     err1Monitor;
 static std::unique_ptr<host_error_monitor::err2_monitor::Err2Monitor>
     err2Monitor;
+#endif
 static std::unique_ptr<host_error_monitor::ierr_monitor::IERRMonitor>
     ierrMonitor;
 static std::unique_ptr<
@@ -82,9 +86,11 @@ bool checkMonitors()
     ret &= smiMonitor->isValid();
     ret &= cpu1MismatchMonitor->isValid();
     ret &= cpu2MismatchMonitor->isValid();
+#ifndef CTL_FEATURE_DISABLE
     ret &= err0Monitor->isValid();
     ret &= err1Monitor->isValid();
     ret &= err2Monitor->isValid();
+#endif
     ret &= ierrMonitor->isValid();
     ret &= cpu1ThermtripMonitor->isValid();
     ret &= cpu2ThermtripMonitor->isValid();
@@ -113,6 +119,7 @@ bool startMonitors(boost::asio::io_service& io,
     cpu2MismatchMonitor = std::make_unique<
         host_error_monitor::cpu_mismatch_monitor::CPUMismatchMonitor>(
         io, conn, "CPU2_MISMATCH", 2);
+#ifndef CTL_FEATURE_DISABLE
     err0Monitor =
         std::make_unique<host_error_monitor::err_pin_monitor::ErrPinMonitor>(
             io, conn, "CPU_ERR0", 0);
@@ -122,6 +129,7 @@ bool startMonitors(boost::asio::io_service& io,
     err2Monitor =
         std::make_unique<host_error_monitor::err2_monitor::Err2Monitor>(
             io, conn, "CPU_ERR2");
+#endif
     ierrMonitor =
         std::make_unique<host_error_monitor::ierr_monitor::IERRMonitor>(
             io, conn, "CPU_CATERR");
@@ -168,9 +176,11 @@ void sendHostOn()
     smiMonitor->hostOn();
     cpu1MismatchMonitor->hostOn();
     cpu2MismatchMonitor->hostOn();
+#ifndef CTL_FEATURE_DISABLE
     err0Monitor->hostOn();
     err1Monitor->hostOn();
     err2Monitor->hostOn();
+#endif
     ierrMonitor->hostOn();
 }
 
-- 
2.25.1

