From e52b8baf7d5805d7a043592a040ae1ff4cd203bc Mon Sep 17 00:00:00 2001
From: "Jason M. Bills" <jason.m.bills@linux.intel.com>
Date: Mon, 24 May 2021 08:28:12 -0700
Subject: [PATCH] Ignore SIO Power Good assert from Off

On some platforms, SIO Power Good remains asserted during the Off
state which is causing the BMC to incorrectly believe that the
system is on.  This then causes errors when requesting power
state transitions and when the BMC starts scanning things like
voltage sensors that are only available when the system is on.

This change removes the handler for the sioPowerGoodAssert
event from the Off state, so when the signal is asserted while
the system is off, the BMC will ignore it and remain in the
Off state.

An upstream change was added to check SIO Power Good on start-up
to help determine the initial power state.  This also fails
because SIO Power Good remains asserted during the Off state
causing the BMC to start up in the wrong state.

This change also removes the check for SIO Power Good on start-up
to initialize in the correct state.

Change-Id: Ica3317de63d7cb246e6bf67707f28af52a2866e4
Signed-off-by: Jason M. Bills <jason.m.bills@linux.intel.com>
Upstream-Status: Pending
---
 src/power_control.cpp | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

diff --git a/src/power_control.cpp b/src/power_control.cpp
index bdb4ea7..ab219e1 100644
--- a/src/power_control.cpp
+++ b/src/power_control.cpp
@@ -1816,9 +1816,6 @@ static void powerStateOff(const Event event)
         case Event::sioS5DeAssert:
             setPowerState(PowerState::waitForPSPowerOK);
             break;
-        case Event::sioPowerGoodAssert:
-            setPowerState(PowerState::on);
-            break;
         case Event::powerButtonPressed:
             psPowerOKWatchdogTimerStart();
             setPowerState(PowerState::waitForPSPowerOK);
@@ -2830,9 +2827,7 @@ int main(int argc, char* argv[])
 
     if (powerOkConfig.type == ConfigType::GPIO)
     {
-        if (psPowerOKLine.get_value() > 0 ||
-            (sioEnabled &&
-             (sioPowerGoodLine.get_value() == sioPwrGoodConfig.polarity)))
+        if (psPowerOKLine.get_value() > 0)
         {
             powerState = PowerState::on;
         }
-- 
2.17.1

